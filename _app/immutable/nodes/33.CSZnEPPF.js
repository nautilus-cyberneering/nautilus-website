import{t as l,a as c}from"../chunks/DVzJEUFw.js";import{s as p,f as h}from"../chunks/KakmFDlB.js";import{P as g,a as u}from"../chunks/CFCmKFQi.js";import{W as y}from"../chunks/CiwQBv7X.js";var w=l(`<p class="svelte-1c2sipw">I did not have a clue about what is meant by <a href="https://gnupg.org/" target="_blank">GPG</a> when I heard it. As it turned out to be it has to do with security.</p> <figure class="svelte-1c2sipw"><img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/impersonation-attack.png" style="background-color: white;" alt="impersonation attack" class="svelte-1c2sipw"> <figcaption class="svelte-1c2sipw">Impersonation Attack</figcaption></figure> <p class="svelte-1c2sipw">Our team strives to have good <a href="https://github.com/Nautilus-Cyberneering/nautilus-librarian/issues?q=label%3Asecurity" target="_blank">security</a> practices. I am no developer but I am contributing to our open-source project where any contribution
			needs to be signed and verified in GitHub and I had to get my head over how GPG works to understand
			it.</p> <p class="svelte-1c2sipw">The decision to implement GPG is to prevent impersonation attacks, and be able to make sure
			that we only received signed and validated contributions to our repositories by our actual
			contributors.</p> <p class="svelte-1c2sipw">Here I try to give you a high-level explanation of what it is, why it is useful and the first
			steps to generate your pair and start using it.</p> <h2 class="svelte-1c2sipw">GPG in Brief</h2> <p class="svelte-1c2sipw">GPG serves to make your online digital life more secure.</p> <p class="svelte-1c2sipw"><a href="https://www.gnupg.org/download/git.html" target="_blank">GnuPG</a> is also known as GPG
			is an open-source implementation of the PGP (Pretty Good Privacy) standard. It is essentially an
			asymmetric key standard that works with an interconnected set of keys.</p> <img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/Gnupg_logo.png" alt="gnupg" class="svelte-1c2sipw"> <p class="svelte-1c2sipw">One private, and secret and the other public, public meaning that it can be shared without any
			danger of misuse. Fact is, one usually uploads the public key to official online key servers,
			where everyone can check for someone’s public PGP or GPG keys. Here is an <a href="https://keys.openpgp.org/" target="_blank">example</a>, the <a href="https://keys.openpgp.org/" target="_blank">keys.openpgp.org</a> server.</p> <p class="svelte-1c2sipw">If you were to compare with the physical world, the key servers act as phone directories where
			people upload their keys linked to specific email addresses.</p> <h3 class="svelte-1c2sipw">Symmetric vs Asymmetric Keys</h3> <p class="svelte-1c2sipw">A <strong>Symmetric Key</strong> is a Private Key. There is no “Public” part to the Symmetric Key.
			If you encrypt a ZIP archive, the “password” is the Private Symmetric Key.</p> <p class="svelte-1c2sipw">As Symmetric Keys allow for very fast and efficient they are used extensively within core
			parts of all cryptographic systems that use encryption. Here the key could be different or
			identical between two parties. This key is to be transmitted (or mutually derived by <a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange" target="_blank">Diffie–Hellman</a>) so that data can be securely transferred.</p> <p class="svelte-1c2sipw">However, other than crypto developers, or when you have a shared password to a ZIP archive, no
			humans directly use Symmetric Keys, instead they use Asymmetric Keys.</p> <p class="svelte-1c2sipw">An <strong>Asymmetric Key</strong> is a special key that has both a private and public parts. The
			allow for people and systems to do many convenient operations that would be impossible with only
			Symmetric Keys.</p> <p class="svelte-1c2sipw">GPG uses Symmetric Keys internally, however in common case the uses are always directly
			interacting with their Asymmetric Keys.</p> <h3 class="svelte-1c2sipw">Public and Private Keys</h3> <p class="svelte-1c2sipw">A <strong>Public Key</strong> allow for people share a special manipulation of their <strong>Private Key</strong> for others to interact with. The two most main interactions are:</p> <ul><li class="svelte-1c2sipw">For <strong>Verifying a Signature</strong> matching a Public Key.</li> <ul><li class="svelte-1c2sipw">This signature could only be <strong>generated</strong> by the Private Key that the Public
					Key was derived from.</li></ul> <li class="svelte-1c2sipw">For <strong>Encrypting Data</strong> to a Public Key.</li> <ul><li class="svelte-1c2sipw">This data can only be <strong>decrypted</strong> by the Private Key that the Public Key was
					derived from.</li></ul></ul> <h3 class="svelte-1c2sipw">PGP and Key Purposes</h3> <p class="svelte-1c2sipw">PGP (and therefore GPG) defines roles, (or purposes), as additional meta-data that is encoded
			into the Public Keys that are generated.</p> <ul><li class="svelte-1c2sipw">Authenticating (Not regularly used)</li> <li class="svelte-1c2sipw">Certifying (Internal use only, the main role of the <strong>Primary Key</strong> is to <strong>Certify</strong> the validity of its related <strong>Sub-Keys</strong> and <strong>User-ID’s</strong>)</li> <li class="svelte-1c2sipw">Signing</li> <li class="svelte-1c2sipw">Encrypting</li></ul> <p class="svelte-1c2sipw">If you are wondering what the difference between Authentication and Signing like I was. The
			difference lies in its trust foundation.</p> <p class="svelte-1c2sipw">Authentication only serves to say: “Hello, this is Me”, where Signing is proving that the
			material is yours and validated as such by you through a <strong>digital signature</strong>.</p> <h2 class="svelte-1c2sipw">Why use it?</h2> <img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/Pro-Con.png" style="background-color: white;" alt="pro con" class="svelte-1c2sipw"> <h3 class="svelte-1c2sipw">Advantages</h3> <p class="svelte-1c2sipw">For authentication, certification and signing the receiving end can verify that the content is
			from you, having your public key. On the other hand, if the other party wants to send you
			something only for you, they will use your public encryption key in combination with their own
			private key to sign and certify the content. Such content can only be decrypted using your own
			private key, and by having their public key you will know that it is from them.</p> <p class="svelte-1c2sipw"><strong>First advantage:</strong> If someone sends to you something encrypted, meant only for you,
			you will be the only one capable of decrypting it.</p> <p class="svelte-1c2sipw">“All right but why now, so many keys?”</p> <p class="svelte-1c2sipw">Essentially there is one primary key, which is typically used only for signing and
			certification, and a sub-key signed by the primary key for encryption. However, you can have
			one for each of the usages if you wanted.</p> <p class="svelte-1c2sipw"><strong>Second advantage:</strong> Each sub-key when used is transmitted at the same time, but
			if compromised it can be revoked individually and a new key generated while keeping your primary
			key valid. It makes it easier to manage your keys and split them for the different purposes you
			want to use them.</p> <h3 class="svelte-1c2sipw">Disadvantage</h3> <p class="svelte-1c2sipw">If your primary key is compromised or you lose it, your security has been breached and someone
			can impersonate you or you lose access to your digital “id” stemming from this key…. you may
			have to start building your digital reputation from scratch.</p> <p class="svelte-1c2sipw">Nevertheless, for this situation there exists the <strong>revocation certificate</strong> which
			is created from the start at the same time that you create your keys for the first time or at any
			given time for the individual keys you want to revoke. With this certificate you would have to
			go to the before mentioned GPG key servers and upload it, to publicly revoke the affected key or
			keys.</p> <h2 class="svelte-1c2sipw">First Steps</h2> <h3 class="svelte-1c2sipw">Generating your new GPG keys with default options</h3> <p class="svelte-1c2sipw">First of all, you need to create yourself a new pair of GPG keys.</p> <p class="svelte-1c2sipw">For this, you need to download the proper software to create and manage these. You have the
			command line option or the GUI implementations to use this standard.</p> <p class="svelte-1c2sipw"><a href="https://www.gnupg.org/index.html" target="_blank">Here</a> is a link to the GnuGPG
			website where you get access to all you need. I myself am using the <a href="https://gpg4win.org/" target="_blank">GPG4Win</a> it is easy to use. Their documentation
			is very detailed and helpful.</p> <p class="svelte-1c2sipw">Once you download and install it you get a set of programs. Each for a specific purpose,
			however in Kleopatra, you can easily generate in less than 5 minutes your pair of keys and
			register them if you want at one of the existing key servers.</p> <p class="svelte-1c2sipw">On the other hand, if you prefer the command-line interface here is a very good article for
			the first steps by Mark Schindel <a href="https://web.archive.org/web/20231206234148/https://www.markschindel.com/how-to-use-gpg/" target="_blank" rel="noopener noreferrer">“How to Use GPG”</a>.</p> <p class="svelte-1c2sipw">Nevertheless, you can also have access to a series of screenshots going over this process. We
			created a <a href="https://github.com/nautilus-cyberneering/secure-git-guide" target="_blank">GPG Bootcamp</a> repository for our contributors. Here you will find a step by step guideline to create your first
			set of GPG Keys using two approaches in our <a href="https://secure-git.guide/003-GPG-101-How-to-get-your-first-GPG-Keys" target="_blank">GPG 101</a>.</p> <h3 class="svelte-1c2sipw">Exporting or backing up your keys</h3> <p class="svelte-1c2sipw">Here are some screenshots using Kleopatra:</p> <figure class="svelte-1c2sipw"><img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/kleopatra-1.png" alt="kleopatra" class="svelte-1c2sipw"> <figcaption class="svelte-1c2sipw">Right click the key to export or backup.</figcaption></figure> <figure class="svelte-1c2sipw"><img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/kleopatra-2.png" alt="kleopatra" class="svelte-1c2sipw"> <figcaption class="svelte-1c2sipw">Select the location where to save it to and click save.</figcaption></figure> <p class="svelte-1c2sipw">If you want to check the contents of the “.asc” file just open it with any basic text editor
			file.</p> <p class="svelte-1c2sipw">And again a link to Mark Schindel’s <a href="https://web.archive.org/web/20231206234148/https://www.markschindel.com/how-to-use-gpg/" target="_blank" rel="noopener noreferrer">“How to Use GPG”</a> which also covers this step.</p> <h3 class="svelte-1c2sipw">Revocation Certificate</h3> <p class="svelte-1c2sipw">During the process of your key creation you also generate a revocation certificate which you
			should download and or preferably print and back up with your keys disconnected from your
			online computer. To download your revocation certificate you can also follow these simple
			steps:</p> <p class="svelte-1c2sipw">If you want to know more about it here is a link to our step by step guide <a href="https://github.com/nautilus-cyberneering/secure-git-guide/blob/main/docs/003-GPG-101-How-to-get-your-first-GPG-Keys.md" target="_blank">GPG 101</a> where there is a section for regenerating your revocation certificate of a specific key.</p> <h3 class="svelte-1c2sipw">Encrypting Files</h3> <p class="svelte-1c2sipw">You can start using it right out of the box to encrypt files with your keys. The user
			interface is very intuitive.</p> <p class="svelte-1c2sipw">Here are some screenshots of Kleopatra:</p> <figure class="svelte-1c2sipw"><img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/kleopatra-3.jpg" alt="kleopatra" class="svelte-1c2sipw"> <figcaption class="svelte-1c2sipw">Select encryption</figcaption></figure> <figure class="svelte-1c2sipw"><img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/kleopatra-4.jpg" alt="kleopatra" class="svelte-1c2sipw"> <figcaption class="svelte-1c2sipw">Select files to encrypt</figcaption></figure> <figure class="svelte-1c2sipw"><img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/kleopatra-5.jpg" alt="kleopatra" class="svelte-1c2sipw"> <figcaption class="svelte-1c2sipw">Encryption Options</figcaption></figure> <figure class="svelte-1c2sipw"><img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/kleopatra-6.jpg" alt="kleopatra" class="svelte-1c2sipw"> <figcaption class="svelte-1c2sipw">Encryption Process</figcaption></figure> <figure class="svelte-1c2sipw"><img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/kleopatra-7.jpg" alt="kleopatra" class="svelte-1c2sipw"> <figcaption class="svelte-1c2sipw">Created GPG encrypted file</figcaption></figure> <figure class="svelte-1c2sipw"><img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/kleopatra-8.jpg" alt="kleopatra" class="svelte-1c2sipw"></figure> <figure class="svelte-1c2sipw"><img src="/images/posts-images/what-is-gpg-why-and-how-to-use-it/kleopatra-9.jpg" alt="kleopatra" class="svelte-1c2sipw"></figure> <p class="svelte-1c2sipw">And again a link to Mark Schindel’s <a href="https://web.archive.org/web/20231206234148/https://www.markschindel.com/how-to-use-gpg/" target="_blank" rel="noopener noreferrer">“How to Use GPG”</a> which also covers this step.</p> <p class="svelte-1c2sipw">As you can see it is pretty much straightforward.</p> <p class="svelte-1c2sipw">Though there are some other considerations for you I will talk about in another post, some
			best practices to consider, as well as in another how to revoke your key.</p> <p class="svelte-1c2sipw">I hope that some of your initial questions about GPG have been covered and that you are now
			more informed than I was when I started using it.</p> <!>`,1);function P(s,i){let{currentPost:e,allPosts:a}=i.data;y(s,{children:(o,d)=>{g(o,{get title(){return e.title},get coverImage(){return e.coverImage},get date(){return e.date},get contributor(){return e.contributor},get contributorSlug(){return e.contributorSlug},get tags(){return e.tags},get categories(){return e.categories},children:(r,m)=>{var t=w(),n=p(h(t),134);u(n,{get currentPage(){return e.slug},allPosts:a}),c(r,t)},$$slots:{default:!0}})}})}export{P as component};
